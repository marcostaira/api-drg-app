generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Tabela whatsapp_sessions - CORRIGIDA com os campos corretos
model WhatsAppSession {
  id              String                   @id @default(uuid())
  tenantId        String                   @map("tenantId") @db.VarChar(191)
  sessionName     String                   @unique @map("sessionName") @db.VarChar(191)
  evolutionApiKey String?                  @map("evolution_api_key") @db.VarChar(255)
  apiKey          String?                  @map("api_key") @db.VarChar(255)
  status          WhatsAppSessionStatus    @default(DISCONNECTED)
  phoneNumber     String?                  @map("phoneNumber") @db.VarChar(191)
  profileName     String?                  @map("profileName") @db.VarChar(191)
  qrCode          String?                  @map("qrCode") @db.Text
  webhookUrl      String?                  @map("webhookUrl") @db.VarChar(191)
  settings        Json?
  connectedAt     DateTime?                @map("connectedAt")
  createdAt       DateTime                 @default(now()) @map("createdAt")
  updatedAt       DateTime                 @updatedAt @map("updatedAt")

  // Relações
  tenant           Tenant            @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  receivedMessages ReceivedMessage[]

  @@map("whatsapp_sessions")
}

// Tabela received_messages
model ReceivedMessage {
  id                String          @id @default(uuid())
  whatsappSessionId String
  messageId         String          @unique @map("messageId") @db.VarChar(191)
  fromPhone         String          @map("fromPhone") @db.VarChar(191)
  fromName          String?         @map("fromName") @db.VarChar(191)
  messageText       String          @map("messageText") @db.Text
  messageType       String          @map("messageType") @db.VarChar(191)
  timestamp         DateTime
  processed         Boolean         @default(false)
  createdAt         DateTime        @default(now()) @map("createdAt")

  // Relações
  whatsappSession WhatsAppSession @relation(fields: [whatsappSessionId], references: [id], onDelete: Cascade)

  @@map("received_messages")
}

// Tabela tenants (nova tabela criada pelo Prisma)
model Tenant {
  id        String    @id @default(uuid())
  name      String
  active    Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")

  // Relações
  whatsappSessions WhatsAppSession[]

  @@map("tenants")
}

// Tabela of_clients (tenant existente do sistema legado)
model OfClient {
  id                    Int       @id @default(autoincrement())
  origin                String?   @db.VarChar(255)
  clientName            String?   @map("client_name") @db.VarChar(255)
  friendlyName          String?   @map("friendly_name") @db.VarChar(255)
  clientGender          String?   @map("client_gender") @db.VarChar(1)
  clientDateb           DateTime? @map("client_dateb") @db.Date
  clientDocCnpj         String?   @map("client_doc_cnpj") @db.VarChar(255)
  addrCep               String?   @map("addr_cep") @db.VarChar(9)
  addrAddr              String?   @map("addr_addr") @db.Text
  addrNumber            String?   @map("addr_number") @db.VarChar(45)
  addrPlus              String?   @map("addr_plus") @db.VarChar(255)
  addrArea              String?   @map("addr_area") @db.Text
  addrCity              String?   @map("addr_city") @db.VarChar(255)
  addrUf                String?   @map("addr_uf") @db.VarChar(2)
  email                 String?   @db.VarChar(45)
  tel1                  String?   @db.VarChar(255)
  tel2                  String?   @db.VarChar(255)
  freeDays              Int?      @default(0) @map("free_days")
  dateAdd               DateTime? @default(now()) @map("date_add") @db.DateTime(0)
  dateLastupdate        DateTime? @default(now()) @updatedAt @map("date_lastupdate") @db.DateTime(0)
  otp                   String?   @db.VarChar(10)
  active                Boolean?  @default(false)
  asaasId               String?   @map("asaas_id") @db.VarChar(45)
  tokenAsaas            String?   @map("token_asaas") @db.VarChar(255)
  urlLogo               String?   @map("url_logo") @db.VarChar(255)
  urlSignature          String?   @map("url_signature") @db.Text
  testimonial1Name      String?   @map("testimonial1_name") @db.VarChar(255)
  testimonial1Cpf       String?   @map("testimonial1_cpf") @db.VarChar(45)
  testimonial1Signature String?   @map("testimonial1_signature") @db.Text
  testimonial2Name      String?   @map("testimonial2_name") @db.VarChar(255)
  testimonial2Signature String?   @map("testimonial2_signature") @db.Text
  testimonial2Cpf       String?   @map("testimonial2_cpf") @db.VarChar(45)
  wapack                Int?      @default(0)
  waactive              Boolean?  @default(false)
  aceitouTermo          Int?      @default(0) @map("aceitou_termo")
  smtpHost              String?   @map("smtp_host") @db.VarChar(255)
  smtpPort              Int?      @map("smtp_port")
  smtpUser              String?   @map("smtp_user") @db.VarChar(255)
  smtpPass              String?   @map("smtp_pass") @db.VarChar(255)
  smtpSender            String?   @map("smtp_sender") @db.VarChar(255)

  @@map("of_clients")
}

enum WhatsAppSessionStatus {
  CONNECTING
  CONNECTED
  DISCONNECTED
  ERROR
}